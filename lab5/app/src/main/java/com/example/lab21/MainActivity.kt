package com.example.lab21import android.content.ContentValuesimport android.content.Intentimport android.os.Bundleimport android.util.Logimport android.widget.ListViewimport android.widget.SimpleAdapterimport android.widget.Toastimport androidx.appcompat.app.AppCompatActivityimport androidx.core.view.isEmptyimport kotlinx.android.synthetic.main.activity_main.*var dataList =ArrayList<HashMap<String,String>>()class MainActivity : AppCompatActivity(){    var dataBaseHandler: DataBaseHandler = DataBaseHandler(this)    override fun onCreate(savedInstanceState: Bundle?)    {        Log.i("AppLogger","onCreate")        super.onCreate(savedInstanceState)        this.setContentView(R.layout.activity_main)        val db = dataBaseHandler.writableDatabase        val simpleAdapter = SimpleAdapter(this, dataList,android.R.layout.simple_list_item_2,            arrayOf("Email", "Password"), intArrayOf(android.R.id.text1,android.R.id.text2))        listView.adapter = simpleAdapter        var idListViewItemClicked: Int = -1        addButton.setOnClickListener()        {            val intent = Intent(this, LoginActivity2::class.java)            startActivity(intent)        }        listView.setOnItemClickListener{parent,view,position,id ->            idListViewItemClicked = position            listView.choiceMode = ListView.CHOICE_MODE_SINGLE        }        delButton.setOnClickListener()        {            if (listView.isEmpty() || idListViewItemClicked == -1)            {                Toast.makeText(this, "Please, select row", Toast.LENGTH_SHORT).show()            }            else            {                dataList.removeAt(idListViewItemClicked)                simpleAdapter.notifyDataSetChanged()                idListViewItemClicked = -1            }        }    }    override fun onStart()    {        Log.i("AppLogger", "onStart")        super.onStart()    }    override fun onResume()    {        Log.i("AppLogger","onResume")        super.onResume()        val strEmailIntentExtra: String? = intent.getStringExtra("e")        val strPasswordIntentExtra: String? = intent.getStringExtra("p")        val map: HashMap<String, String> =HashMap()        map.put("Email", "$strEmailIntentExtra")        map.put("Password", "$strPasswordIntentExtra")        if (strPasswordIntentExtra != null && strEmailIntentExtra != null)        {            // Gets the data repository in write mode            val db = dataBaseHandler.writableDatabase            // Create a new map of values, where column names are the keys            val values = ContentValues().apply {                put(DBContract.UserEntry.COLUMN_NAME_LOGIN, strEmailIntentExtra)                put(DBContract.UserEntry.COLUMN_NAME_PASSWORD, strPasswordIntentExtra)            }            // Insert the new row, returning the primary key value of the new row            val newRowIdToDB = db?.insert(DBContract.UserEntry.TABLE_NAME, null, values)            dataList.add(map)            Toast.makeText(this,"Row added to table",Toast.LENGTH_SHORT).show()        }    }    override fun onPause()    {        Log.i("AppLogger", "onPause")        super.onPause()    }    override fun onStop()    {        Log.i("AppLogger", "onStop")        super.onStop()    }    override fun onDestroy()    {        Log.i("AppLogger", "onDestroy")        super.onDestroy()    }}